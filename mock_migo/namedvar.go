// Automatically generated by MockGen. DO NOT EDIT!
// Source: migo.go

package mock_migo // import "github.com/dmarottoli/migo/mock_migo"

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of NamedVar interface
type MockNamedVar struct {
	ctrl     *gomock.Controller
	recorder *_MockNamedVarRecorder
}

// Recorder for MockNamedVar (not exported)
type _MockNamedVarRecorder struct {
	mock *MockNamedVar
}

func NewMockNamedVar(ctrl *gomock.Controller) *MockNamedVar {
	mock := &MockNamedVar{ctrl: ctrl}
	mock.recorder = &_MockNamedVarRecorder{mock}
	return mock
}

func (_m *MockNamedVar) EXPECT() *_MockNamedVarRecorder {
	return _m.recorder
}

func (_m *MockNamedVar) Name() string {
	ret := _m.ctrl.Call(_m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockNamedVarRecorder) Name() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Name")
}

func (_m *MockNamedVar) String() string {
	ret := _m.ctrl.Call(_m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockNamedVarRecorder) String() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "String")
}

// Mock of Statement interface
type MockStatement struct {
	ctrl     *gomock.Controller
	recorder *_MockStatementRecorder
}

// Recorder for MockStatement (not exported)
type _MockStatementRecorder struct {
	mock *MockStatement
}

func NewMockStatement(ctrl *gomock.Controller) *MockStatement {
	mock := &MockStatement{ctrl: ctrl}
	mock.recorder = &_MockStatementRecorder{mock}
	return mock
}

func (_m *MockStatement) EXPECT() *_MockStatementRecorder {
	return _m.recorder
}

func (_m *MockStatement) String() string {
	ret := _m.ctrl.Call(_m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockStatementRecorder) String() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "String")
}
